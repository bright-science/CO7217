buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("org.springframework:springloaded:1.2.7.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


repositories {
	mavenCentral()
}


eclipse {
	project {
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
	  natures 'org.eclipse.jdt.core.javanature',
	    'org.eclipse.jdt.groovy.core.groovyNature',
	  	'org.eclipse.buildship.core.gradleprojectnature', 
		'org.springframework.ide.eclipse.core.springnature', 
		'org.eclipse.wst.common.project.facet.core.nature'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.1'
}

// tag::versions[]
ext {
	groovyVersion = '2.4.12'
}
// end::versions[]


dependencies {
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
	compile "com.gmongo:gmongo:1.5"
}

task runScript (dependsOn: 'classes', type: JavaExec) {
	main = "lab2.Exercise"
	classpath = sourceSets.main.runtimeClasspath
}


///////////////////////////////////////////////////////////////////////////////
// PROJECT SPECIFIC
///////////////////////////////////////////////////////////////////////////////

// name of the jar to be generated
jar.baseName = 'mongodb'
jar.version = ''

// name of the Eclipse project
eclipse.project.name = 'mongodb'

